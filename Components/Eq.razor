<div class="knobs-container">
    <Knob Name="HI" @ref="eqHi" ValueChanged="ApplyEqHi" />
    <Knob Name="MID" @ref="eqMid" ValueChanged="ApplyEqMid" />
    <Knob Name="LO" @ref="eqLo" ValueChanged="ApplyEqLo" />
</div>

@code {
    private Knob? eqHi;
    private Knob? eqMid;
    private Knob? eqLo;

    public struct EqValues {
        public double Hi;
        public double Mid;
        public double Lo;
    }
    private EqValues eqValues = new();

    [Parameter]
    public EventCallback<EqValues> ValueChanged { get; set; }

    public Eq() {
        eqValues.Hi = 0.5;
        eqValues.Mid = 0.5;
        eqValues.Lo = 0.5;
    }

    public void Reset() {
        eqHi?.SetValue(0.5);
        eqMid?.SetValue(0.5);
        eqLo?.SetValue(0.5);
    }

    private async void ApplyEqHi(double value) {
        eqValues.Hi = value;
        await ValueChanged.InvokeAsync(eqValues);
    }

    private async void ApplyEqMid(double value) {
        eqValues.Mid = value;
        await ValueChanged.InvokeAsync(eqValues);
    }

    private async void ApplyEqLo(double value) {
        eqValues.Lo = value;
        await ValueChanged.InvokeAsync(eqValues);
    }

    protected override async Task OnAfterRenderAsync(bool firstRender) {
        if(firstRender) {
            eqHi?.SetInitialValue(eqValues.Hi);
            eqMid?.SetInitialValue(eqValues.Mid);
            eqLo?.SetInitialValue(eqValues.Lo);

            await InvokeAsync(StateHasChanged);
        }
    }
}
